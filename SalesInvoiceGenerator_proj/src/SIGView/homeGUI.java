/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SIGView;

import SIGController.guiActionListener;
import SIGModel.Invoice;
import SIGModel.Item;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class homeGUI extends javax.swing.JFrame {

         ArrayList<Invoice> allInvoicesView = new ArrayList<>(); //array list to load all invoices in it
         ArrayList<Item> allItemsView= new ArrayList<>(); //array list to load all invoices in it

         /*  createNewInvoice create;
           createNewItem createItem;
          */ 

   // guiActionListener x= new guiActionListener();
   // guiActionListener x1;
    
    /**
     * Creates new form homeGUI
     */
    public homeGUI()  {
       // this.x1 = new guiActionListener(this);
       
       /* create=new createNewInvoice();
        createItem= new createNewItem();
        
*/
        initComponents();
   
       // this.btn_cancel.setActionCommand("hello");
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        leftTable = new javax.swing.JTable();
        btn_createNewInv = new javax.swing.JButton();
        btn_createNewInv.addActionListener(myController);
        btn_deleteInv = new javax.swing.JButton();
        btn_deleteInv.addActionListener(myController);
        jPanel3 = new javax.swing.JPanel();
        lbl_invNum = new javax.swing.JLabel();
        lbl_invNumValue = new javax.swing.JLabel();
        lbl_invDate = new javax.swing.JLabel();
        txt_invDate = new javax.swing.JTextField();
        lbl_custName = new javax.swing.JLabel();
        txt_custName = new javax.swing.JTextField();
        lbl_invTotal = new javax.swing.JLabel();
        lbl_invTotalValue = new javax.swing.JLabel();
        myPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rightTable = new javax.swing.JTable();
        btn_save = new javax.swing.JButton();
        btn_save.addActionListener(myController);
        btn_cancel = new javax.swing.JButton();
        btn_cancel.addActionListener(myController);
        btn_createItm = new javax.swing.JButton();
        btn_createItm.addActionListener(myController);
        btn_deleteItm = new javax.swing.JButton();
        btn_deleteItm.addActionListener(myController);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menuLoad = new javax.swing.JMenuItem();
        loadItems = new javax.swing.JMenuItem();
        loadItems.addActionListener(myController);
        menuSave = new javax.swing.JMenuItem();
        menuSave.addActionListener(myController);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Invoices Table");

        leftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No. ", "Date", "Customer", "Total"
            }
        ));
        leftTable.setUpdateSelectionOnSort(false);
        leftTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(leftTable);

        btn_createNewInv.setText("Create New Invoice");
        btn_createNewInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createNewInvActionPerformed(evt);
            }
        });

        btn_deleteInv.setText("Delete Invoice");
        btn_deleteInv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_deleteInvMouseClicked(evt);
            }
        });
        btn_deleteInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteInvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_createNewInv, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_deleteInv, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_deleteInv)
                    .addComponent(btn_createNewInv))
                .addGap(30, 30, 30))
        );

        lbl_invNum.setText("Invoice Number");

        lbl_invNumValue.setText("-");

        lbl_invDate.setText("Invoice Date");

        lbl_custName.setText("Customer Name");

        lbl_invTotal.setText("Invoice Total");

        lbl_invTotalValue.setText("-");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_invTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_invTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_custName, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_custName))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_invNum)
                            .addComponent(lbl_invDate, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_invNumValue, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_invDate, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_invNum)
                    .addComponent(lbl_invNumValue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_invDate)
                    .addComponent(txt_invDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_custName)
                    .addComponent(txt_custName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_invTotal)
                    .addComponent(lbl_invTotalValue)))
        );

        myPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Invoice Items"));

        rightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Item Name", "Item Price", "Count", "Item Total"
            }
        ));
        jScrollPane2.setViewportView(rightTable);

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_createItm.setText("Create New Item");
        btn_createItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_createItmActionPerformed(evt);
            }
        });

        btn_deleteItm.setText("Delete Item");
        btn_deleteItm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteItmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myPanelLayout = new javax.swing.GroupLayout(myPanel);
        myPanel.setLayout(myPanelLayout);
        myPanelLayout.setHorizontalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(myPanelLayout.createSequentialGroup()
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_createItm)
                            .addComponent(btn_deleteItm, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_save, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_cancel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        myPanelLayout.setVerticalGroup(
            myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_createItm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_deleteItm)
                    .addComponent(btn_cancel))
                .addGap(59, 59, 59))
        );

        jMenu3.setText("File");

        menuLoad.setText("Load all invoices-Step1");
        menuLoad.setActionCommand("LoadAllInvoices");
        menuLoad.addActionListener(myController);

        menuLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLoadActionPerformed(evt);
            }
        });
        jMenu3.add(menuLoad);

        loadItems.setText("Load all Items-Step2");
        loadItems.setActionCommand("Load all Items");
        loadItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadItemsActionPerformed(evt);
            }
        });
        jMenu3.add(loadItems);

        menuSave.setText("Save");
        menuSave.setActionCommand("Save Files");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu3.add(menuSave);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(myPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leftTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftTableMouseClicked
    
        loadSelectedInvoiceDetails();
        
        /*
        DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
        String getSelectedRowValue=leftTblModel.getValueAt(leftTable.getSelectedRow(),0).toString();

        Invoice selectedInvoice= y.getInvoiceDetails(getSelectedRowValue);
        //Load invoice Data
        lbl_invNumValue.setText(selectedInvoice.invoiceID);

        txt_invDate.setText(selectedInvoice.invoiceDate);

        txt_custName.setText(selectedInvoice.customerName);
        lbl_invTotalValue.setText(Integer.toString(selectedInvoice.totalPrice));
        //Load invoice items in table
        DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();
        rightTblModel.setRowCount(0);

        for(int i=0; i<selectedInvoice.items.size();i++){

            String item[]={selectedInvoice.items.get(i).invoiceNumber, selectedInvoice.items.get(i).itemName, Integer.toString(selectedInvoice.items.get(i).price), Integer.toString(selectedInvoice.items.get(i).count),selectedInvoice.items.get(i).getItemPriceTotal()};
            rightTblModel.addRow(item);

        }
*/
    }//GEN-LAST:event_leftTableMouseClicked

    private void btn_createNewInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createNewInvActionPerformed
/*
        create.setVisible(true);

        create.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                // System.out.println("jdialog window closed event received");

                DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
                leftTblModel.setRowCount(0);
                for(int i=0; i<y.allInvoices.size();i++){

                    String totalPrice= Integer.toString(y.allInvoices.get(i).getTotalPrice());

                    String row[]={y.allInvoices.get(i).invoiceID,y.allInvoices.get(i).invoiceDate, y.allInvoices.get(i).customerName,totalPrice};

                    //  DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
                    leftTblModel.addRow(row);

                }
            }

        });*/
    }//GEN-LAST:event_btn_createNewInvActionPerformed

    private void btn_deleteInvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_deleteInvMouseClicked
/*
        DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
        String getSelectedRowValue=leftTblModel.getValueAt(leftTable.getSelectedRow(),0).toString();
        y.deleteInvoice(getSelectedRowValue);
        // y.writeToFileAllInvoices();
        // y.writeToFileAllItems();
        /*   y.readFromFileAllInvoices();
        y.readFromFileAllItems();
        y.addItemsToInvoice();
        */
    /*    leftTblModel.setRowCount(0);
        for(int i=0; i<y.allInvoices.size();i++){

            String totalPrice= Integer.toString(y.allInvoices.get(i).getTotalPrice());

            String row[]={y.allInvoices.get(i).invoiceID,y.allInvoices.get(i).invoiceDate, y.allInvoices.get(i).customerName,totalPrice};

            //  DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
            leftTblModel.addRow(row);

        }
*/
    }//GEN-LAST:event_btn_deleteInvMouseClicked

    private void btn_deleteInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteInvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_deleteInvActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
/*
        try {
            y.writeToFileAllItems();
        } catch (IOException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel tblModelRight=(DefaultTableModel)rightTable.getModel();
        tblModelRight.setRowCount(0);
        lbl_invNumValue.setText("-");
        txt_custName.setText("");
        txt_invDate.setText("");
        lbl_invTotalValue.setText("-");*/
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
/*
        try {
            y= new filesInputandOutput();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            y.readFromFileAllInvoices();
            y.readFromFileAllItems();
            y.addItemsToInvoice();

            DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
            tblModel.setRowCount(0);

            for(int i=0; i<y.allInvoices.size();i++){
                String totalPrice1= Integer.toString(y.allInvoices.get(i).getTotalPrice());
                // System.out.println("price i="+i+" -> "+totalPrice);

                String row[]={y.allInvoices.get(i).invoiceID, y.allInvoices.get(i).invoiceDate, y.allInvoices.get(i).customerName,totalPrice1};

                tblModel.addRow(row);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        DefaultTableModel tblModelRight=(DefaultTableModel)rightTable.getModel();
        tblModelRight.setRowCount(0);
        lbl_invNumValue.setText("-");
        txt_custName.setText("");
        txt_invDate.setText("");
        lbl_invTotalValue.setText("-");
*/
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_createItmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_createItmActionPerformed

     /*   selectedInvoiceNumber=lbl_invNumValue.getText();
        createItem.setVisible(true);

        Invoice selectedInvoice= y.getInvoiceDetails(selectedInvoiceNumber);

        Invoice z= new Invoice();

        createItem.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                //  System.out.println("jdialog window closed event received");

                DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();

                rightTblModel.setRowCount(0);

                /*    for(int j=0; j<y.allInvoices.size(); j++){
                    if(y.allInvoices.get(j).invoiceID.equals(selectedInvoiceNumber)){
                        for(int i=0; i<y.allInvoices.get(j).items.size(); i++){
                            z= y.allInvoices.get(j).items.get(i)
                        }
                    }
                }
                */
/*
                for(int i=0; i<selectedInvoice.items.size();i++){

                    String item[]={selectedInvoice.items.get(i).invoiceNumber, selectedInvoice.items.get(i).itemName, Integer.toString(selectedInvoice.items.get(i).price), Integer.toString(selectedInvoice.items.get(i).count),selectedInvoice.items.get(i).getItemPriceTotal()};

                    // System.out.println("invoice number"+item[0]+"item name"+item[1]);
                    rightTblModel.addRow(item);

                }
                int total=selectedInvoice.getTotalPrice();
                lbl_invTotalValue.setText(Integer.toString(total));

            }

        });
*/
    }//GEN-LAST:event_btn_createItmActionPerformed

    private void btn_deleteItmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteItmActionPerformed
/*
        DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();
        String getSelectedRowinvNum=rightTblModel.getValueAt(rightTable.getSelectedRow(),0).toString();
        String getSelectedRowItmName=rightTblModel.getValueAt(rightTable.getSelectedRow(),1).toString();
        y.deleteItem(getSelectedRowinvNum,getSelectedRowItmName);

        rightTblModel.setRowCount(0);
        Invoice selectedInvoice1= y.getInvoiceDetails(getSelectedRowinvNum);

        for(int i=0; i<selectedInvoice1.items.size();i++){

            String item[]={selectedInvoice1.items.get(i).invoiceNumber, selectedInvoice1.items.get(i).itemName, Integer.toString(selectedInvoice1.items.get(i).price), Integer.toString(selectedInvoice1.items.get(i).count),selectedInvoice1.items.get(i).getItemPriceTotal()};
            rightTblModel.addRow(item);

        }

        int total=selectedInvoice1.getTotalPrice();
        lbl_invTotalValue.setText(Integer.toString(total));
*/
    }//GEN-LAST:event_btn_deleteItmActionPerformed

    private void menuLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLoadActionPerformed

      /*  try {
            y= new filesInputandOutput();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            y.readFromFileAllInvoices();
            y.readFromFileAllItems();
            y.addItemsToInvoice();

            DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
            tblModel.setRowCount(0);

            for(int i=0; i<y.allInvoices.size();i++){
                String totalPrice1= Integer.toString(y.allInvoices.get(i).getTotalPrice());
                // System.out.println("price i="+i+" -> "+totalPrice);

                String row[]={y.allInvoices.get(i).invoiceID,y.allInvoices.get(i).invoiceDate, y.allInvoices.get(i).customerName,totalPrice1};

                tblModel.addRow(row);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
*/
    }//GEN-LAST:event_menuLoadActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed

        /*try {
            y.writeToFileAllInvoices();
            y.writeToFileAllItems();
        } catch (IOException ex) {
            Logger.getLogger(homeGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //  y.readFromFileAllItems();
*/
    }//GEN-LAST:event_menuSaveActionPerformed

    private void loadItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadItemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadItemsActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(homeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(homeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(homeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(homeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new homeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_createItm;
    private javax.swing.JButton btn_createNewInv;
    private javax.swing.JButton btn_deleteInv;
    private javax.swing.JButton btn_deleteItm;
    private javax.swing.JButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_custName;
    private javax.swing.JLabel lbl_invDate;
    private javax.swing.JLabel lbl_invNum;
    private javax.swing.JLabel lbl_invNumValue;
    private javax.swing.JLabel lbl_invTotal;
    private javax.swing.JLabel lbl_invTotalValue;
    private static javax.swing.JTable leftTable;
    private javax.swing.JMenuItem loadItems;
    private javax.swing.JMenuItem menuLoad;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JPanel myPanel;
    private javax.swing.JTable rightTable;
    private javax.swing.JTextField txt_custName;
    private javax.swing.JTextField txt_invDate;
    // End of variables declaration//GEN-END:variables

    
       createNewInvoice create=new createNewInvoice();
       createNewItem createItem= new createNewItem();
           
    //guiActionListener myController=new guiActionListener(this,create, createItem);
   
       
    guiActionListener myController=new guiActionListener(this);
    
   

    
    public JTable getLeftTable(){
        return leftTable;
    }

    public void setAllInvoicesView(ArrayList<Invoice> allInv){
        this.allInvoicesView=allInv;
    }
    public void setAllItemsView(ArrayList<Item> allItms){
        this.allItemsView=allItms;
    }
    public void loadInvoicesToTable(ArrayList<Invoice> allInvoices){
        
            DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
            tblModel.setRowCount(0);
            
            for(int i=0; i<allInvoices.size();i++){
              
                String totalPrice1= Integer.toString(allInvoices.get(i).getTotalPrice());
                // System.out.println("price i="+i+" -> "+totalPrice);
                String row[]={allInvoices.get(i).invoiceID,allInvoices.get(i).getInvoiceDate(), allInvoices.get(i).getCustomerName(),totalPrice1};

                tblModel.addRow(row);
    }
            
             DefaultTableModel tblModelRight=(DefaultTableModel)rightTable.getModel();
             tblModelRight.setRowCount(0);
             lbl_invNumValue.setText("-");
             txt_custName.setText("");
             txt_invDate.setText("");
             lbl_invTotalValue.setText("-");
            
            
            
    }
    
    public void loadAfterCancel(ArrayList<Invoice> allInvoices1){
        /* 
             DefaultTableModel tblModel=(DefaultTableModel)leftTable.getModel();
             tblModel.setRowCount(0);
             
             for(int i=0; i<allInvoices1.size();i++){
                 String totalPrice1= Integer.toString(allInvoices1.get(i).getTotalPrice());
                // System.out.println("price i="+i+" -> "+totalPrice);
                
 String row[]={allInvoicesView.get(i).invoiceID,allInvoicesView.get(i).getInvoiceDate(), allInvoicesView.get(i).getCustomerName(),totalPrice1};
      
                 tblModel.addRow(row);
            */
    }

    public void loadSelectedInvoiceDetails(){
        
        DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
        String getSelectedRowValue=leftTblModel.getValueAt(leftTable.getSelectedRow(),0).toString();

        Invoice selectedInvoice= myController.getInvDetails(getSelectedRowValue);
       // Invoice selectedInvoice= y.getInvoiceDetails(getSelectedRowValue);
        //Load invoice Data
        lbl_invNumValue.setText(selectedInvoice.invoiceID);

        txt_invDate.setText(selectedInvoice.getInvoiceDate());

        txt_custName.setText(selectedInvoice.getCustomerName());
        lbl_invTotalValue.setText(Integer.toString(selectedInvoice.getTotalPrice()));
        //Load invoice items in table
        DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();
        rightTblModel.setRowCount(0);

        for(int i=0; i<selectedInvoice.items.size();i++){

            String item[]={selectedInvoice.items.get(i).getInvoiceNum(), selectedInvoice.items.get(i).getItemName(), Integer.toString(selectedInvoice.items.get(i).getPrice()), Integer.toString(selectedInvoice.items.get(i).getCount()),selectedInvoice.items.get(i).getItemPriceTotal()};
            rightTblModel.addRow(item);
        }
    }
    
    public String getSelectedInvoice(){
        DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
        String getSelectedRowValue=leftTblModel.getValueAt(leftTable.getSelectedRow(),0).toString();
        return getSelectedRowValue;
    }
    
    public String getSelectedItem(){
        DefaultTableModel leftTblModel=(DefaultTableModel) rightTable.getModel();
        String getSelectedRowValue=leftTblModel.getValueAt(rightTable.getSelectedRow(),1).toString();
        return getSelectedRowValue;
    }
    
   public void displayDataAfterDeleteInvoice(ArrayList<Invoice> tempInvList){
     
        DefaultTableModel leftTblModel=(DefaultTableModel)leftTable.getModel();
       // String getSelectedRowValue=leftTblModel.getValueAt(leftTable.getSelectedRow(),0).toString();
        leftTblModel.setRowCount(0);
        for(int i=0; i<tempInvList.size();i++){
            
            String totalPrice= Integer.toString(tempInvList.get(i).getTotalPrice());
            
            String row[]={tempInvList.get(i).invoiceID,tempInvList.get(i).getInvoiceDate(), tempInvList.get(i).getCustomerName(),totalPrice};
            
            leftTblModel.addRow(row);
            
        }        
    }
   public void resetItems(){
       
        DefaultTableModel tblModelRight=(DefaultTableModel)rightTable.getModel();
        tblModelRight.setRowCount(0);
        lbl_invNumValue.setText("-");
        txt_custName.setText("");
        txt_invDate.setText("");
        lbl_invTotalValue.setText("-");
   }
   public void showNewItemCreated(Item x, String total){
    
       
        DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();
        String item[]={x.getInvoiceNum(), x.getItemName(), Integer.toString(x.getPrice()), Integer.toString(x.getCount()),x.getItemPriceTotal()};
        rightTblModel.addRow(item);  
        lbl_invTotalValue.setText(total);
   }
   
   public void showItemsAfterDelete(ArrayList<Item> allitems,String total){
    
        DefaultTableModel rightTblModel=(DefaultTableModel)rightTable.getModel();
        rightTblModel.setRowCount(0);
        String invNo=this.getSelectedInvoice();
        Item x;
       for(int j=0; j< allitems.size(); j++ ){
           if(allitems.get(j).getInvoiceNum().equals(invNo)){
            x=allitems.get(j);
           String item[]={x.getInvoiceNum(), x.getItemName(), Integer.toString(x.getPrice()), Integer.toString(x.getCount()),x.getItemPriceTotal()};
           rightTblModel.addRow(item); 
           }
       }
         
       
        lbl_invTotalValue.setText(total);   
   
   
   }
    
    
}
